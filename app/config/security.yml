security:
    encoders:
        Momono\BackofficeBundle\Admin\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_adminbundle:
            entity:
                class: Momono\BackofficeBundle\Entity\Admin
                property: email
        fos_userbundle:
            entity:
                class: Momono\DefaultBundle\Entity\User
                property: email

    firewalls:
        admin:
            # host: ^backoffice\.example\.com$
            pattern: ^/admin
            form_login:
                use_forward: false

                # do not allow GET
                post_only: true
                provider: fos_adminbundle
                #csrf_provider: form.csrf_provider
                intention: authenticate
                check_path: /admin/login_check
                login_path: /admin/login
            logout:       true
            anonymous:    true
            
        user:
            pattern: ^/selfcare
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                check_path: /selfcare/login_check
                login_path: selfcare_user_registration
            logout:       true
            anonymous:    true


    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/selfcare/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/selfcare/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/selfcare/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/selfcare/, role: ROLE_USER }